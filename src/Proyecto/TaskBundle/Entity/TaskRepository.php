<?php

namespace Proyecto\TaskBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends EntityRepository {

    public function taskEndenMorgen($idUser) {
        $dt_UnDiaDespues = date('Y-m-d', strtotime('+1 day')) ; // Suma 1 dia
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE (u.user = :idUser) AND (t.endingDate = :morgen) AND (u.task = t.id)");    
        $dql->setParameters(array('idUser' => $idUser, 'morgen' => $dt_UnDiaDespues));
        $tasks = $dql->getResult();
        return $tasks;
    }

    public function taskEnden30Tagen($idUser) {
        $dt_UnDiaDespues = date('Y-m-d', strtotime('+1 day')) ; // Suma 1 dia
        $dt_30DiaDespues = date('Y-m-d', strtotime('+30 day')) ; // Suma 30 dias
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE (u.user = :idUser) AND (t.endingDate > :morgen) AND (t.endingDate < :treinta) AND (u.task = t.id)");    
        $dql->setParameters(array('idUser' => $idUser, 'treinta' => $dt_30DiaDespues, 'morgen' => $dt_UnDiaDespues));
        $tasks = $dql->getResult();
        return $tasks;
    }

    public function taskErledig($idUser) {      
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE (u.user = :idUser) AND (t.erledig = 1) AND (u.task = t.id)");    
        $dql->setParameters(array('idUser' => $idUser));
        $tasks = $dql->getResult();
        return $tasks;
    }

    public function taskHeute($idUser) { 
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE (u.user = :idUser) AND (t.endingDate = CURRENT_DATE()) AND (u.task = t.id)");    
        $dql->setParameters(array('idUser' => $idUser));
        $tasks = $dql->getResult();
        return $tasks;
    }

    public function keinFalligDatum($idUser) { 
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE (u.user = :idUser) AND (t.endingDate is NULL) AND (u.task = t.id)");    
        $dql->setParameters(array('idUser' => $idUser));
        $tasks = $dql->getResult();
        return $tasks;
    }

    public function buscarTarea($dato, $idUser) {
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE u.user = :idUser AND (t.name LIKE :q1 OR t.teil LIKE :q1 OR t.notas LIKE :q1 OR t.id LIKE :q1) AND (u.task = t.id)");
        $dql->setParameters(array(
            'idUser' => $idUser,
            'q1' => '%'.$dato.'%'));
        $tasks = $dql->getResult();       
        return $tasks;
    }
    
    public function tareasDadoCliente($idCliente) {
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t WHERE t.client = :client_id");
        $dql->setParameter('client_id', $idCliente);
        $tasks = $dql->getResult();
        return $tasks;
    }
    
    public function misTareas($idUser){
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t WHERE t.users = :idUser");
        $dql->setParameters(array(
            'idUser' => $idUser));
        $myTasks = $dql->getResult();
        return $myTasks;
    }
    
    public function tasksFechaPasada($idUser) {//Ã¼berfallig
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE u.user = :idUser AND (t.endingDate < CURRENT_DATE()) AND (u.task = t.id)");
        $dql->setParameters(array(
            'idUser' => $idUser));
        $taskPasadas = $dql->getResult();
        return $taskPasadas;
    }
    
    public function tasksFuturas($idUser) {
        $dt_30DiaDespues = date('Y-m-d', strtotime('+30 day')) ; // Suma 30 dias
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t JOIN TareaBundle:UserTaskClient u WHERE u.user = :idUser AND (t.endingDate > :treinta) AND (u.task = t.id)");    
        $dql->setParameters(array('idUser' => $idUser, 'treinta' => $dt_30DiaDespues));
        $tasks = $dql->getResult();
        return $tasks;
    }
    
    public function tasksPasadasTresMeses() {
        $dt_90DiaAntes = date('Y-m-d', strtotime('-90 day')) ; // Suma 30 dias
        $dql = $this->getEntityManager()->createQuery("SELECT t FROM TareaBundle:Task t WHERE t.endingDate < :noventa AND t.erledig = 1");    
        $dql->setParameters(array('noventa' => $dt_90DiaAntes));
        $tasks = $dql->getResult();
        return $tasks;
    }

}
